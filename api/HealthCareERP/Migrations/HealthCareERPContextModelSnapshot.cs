// <auto-generated />
using System;
using HealthCareERP.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace HealthCareERP.Migrations
{
    [DbContext(typeof(HealthCareERPContext))]
    partial class HealthCareERPContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.8")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("HealthCareERP.Entities.Medicine", b =>
                {
                    b.Property<long>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AnaliseRecursal")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Apresentacao")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Cap")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClasseTerapeutica")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Cnpj")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("CodigoGgrem")
                        .HasColumnType("bigint");

                    b.Property<string>("Comercializacao2020")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Confaz87")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("Ean1")
                        .HasColumnType("bigint");

                    b.Property<long>("Ean2")
                        .HasColumnType("bigint");

                    b.Property<long>("Ean3")
                        .HasColumnType("bigint");

                    b.Property<string>("Icms0")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Laboratorio")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ListaConcessaoCreditoTributario")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LoteID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Pf0")
                        .HasColumnType("float");

                    b.Property<double>("Pf12")
                        .HasColumnType("float");

                    b.Property<double>("Pf17")
                        .HasColumnType("float");

                    b.Property<double>("Pf175")
                        .HasColumnType("float");

                    b.Property<double>("Pf175Alc")
                        .HasColumnType("float");

                    b.Property<double>("Pf17Alc")
                        .HasColumnType("float");

                    b.Property<double>("Pf18")
                        .HasColumnType("float");

                    b.Property<double>("Pf18Alc")
                        .HasColumnType("float");

                    b.Property<double>("Pf20")
                        .HasColumnType("float");

                    b.Property<double>("PfSemImpostos")
                        .HasColumnType("float");

                    b.Property<double>("Pmc0")
                        .HasColumnType("float");

                    b.Property<double>("Pmc12")
                        .HasColumnType("float");

                    b.Property<double>("Pmc17")
                        .HasColumnType("float");

                    b.Property<double>("Pmc175")
                        .HasColumnType("float");

                    b.Property<double>("Pmc175Alc")
                        .HasColumnType("float");

                    b.Property<double>("Pmc17Alc")
                        .HasColumnType("float");

                    b.Property<double>("Pmc18")
                        .HasColumnType("float");

                    b.Property<double>("Pmc18Alc")
                        .HasColumnType("float");

                    b.Property<double>("Pmc20")
                        .HasColumnType("float");

                    b.Property<string>("Produto")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RegimePreco")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("Registro")
                        .HasColumnType("bigint");

                    b.Property<string>("RestricaoHospitalar")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("StorageID")
                        .HasColumnType("bigint");

                    b.Property<string>("Substancia")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Tarja")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TipoProduto")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.HasIndex("StorageID");

                    b.ToTable("Medicines");
                });

            modelBuilder.Entity("HealthCareERP.Entities.Storage", b =>
                {
                    b.Property<long>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("LoteID")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("Storages");
                });

            modelBuilder.Entity("HealthCareERP.Entities.Medicine", b =>
                {
                    b.HasOne("HealthCareERP.Entities.Storage", null)
                        .WithMany("Medicines")
                        .HasForeignKey("StorageID");
                });

            modelBuilder.Entity("HealthCareERP.Entities.Storage", b =>
                {
                    b.Navigation("Medicines");
                });
#pragma warning restore 612, 618
        }
    }
}
